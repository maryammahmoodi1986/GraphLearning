---
title: "۲-۴: الگوریتم Metropolis-Hastings (MCMC)"
---

[قبلی](section4-1.qmd) | [بعدی](section4-3.qmd)

الگوریتم Metropolis-Hastings یکی از قدرتمندترین روش‌های نمونه‌برداری بیزی برای یادگیری ساختار شبکه‌های بیزی است که در فایل `learn_struct_mcmc.m` از Bayes Net Toolbox پیاده‌سازی شده است. این الگوریتم با استفاده از یک زنجیره مارکوف در فضای گراف‌های جهت‌دار غیرمدور (DAGs) حرکت می‌کند تا توزیع پسین ساختارهای ممکن را تخمین بزند.

هدف اصلی این روش، شناسایی روابط علّی یا وابستگی‌ها بین متغیرها بر اساس داده‌های ورودی است که معمولاً گسسته و کاملاً مشاهده شده هستند. این الگوریتم با اعمال تغییرات تدریجی بر روی ساختار گراف و ارزیابی هر تغییر، به‌تدریج به ساختارهای محتمل‌تر همگرا می‌شود.

## مراحل اصلی الگوریتم

 ۱. مقداردهی اولیه

گراف اولیه (DAG) معمولاً به‌صورت تصادفی یا خالی (بدون لبه) انتخاب می‌شود. در نسخه بهبودیافته، از دانش پیشین برای مقداردهی اولیه استفاده شده است. به‌عنوان مثال، لبه‌های شناخته شده شبکه Asia مانند Asia → Tuberculosis برای مقداردهی اولیه به‌کار گرفته شده‌اند.

این کار باعث می‌شود کاوش به سمت ساختارهای محتمل‌تر هدایت شود و زمان همگرایی کاهش یابد. استفاده از دانش پیشین یکی از مزیت‌های کلیدی نسخه‌های بهبودیافته نسبت به پیاده‌سازی اولیه است.

 ۲. نمونه‌برداری با Metropolis-Hastings

در هر مرحله، یک گراف جدید با اعمال یکی از سه عملیات پیشنهاد می‌شود:

**افزودن لبه (add edge):** اضافه کردن یک لبه جدید بین دو گره، به شرطی که گراف غیرمدور باقی بماند. این عملیات با بررسی عدم تشکیل چرخه انجام می‌شود.

**حذف لبه (delete edge):** حذف یک لبه موجود از گراف. این عملیات ساده‌ترین نوع تغییر است و همواره مجاز است.

**معکوس کردن لبه (reverse edge):** تغییر جهت یک لبه موجود، به شرط عدم ایجاد چرخه. این عملیات پیچیده‌ترین نوع تغییر است و نیاز به بررسی دقیق دارد.

گراف جدید با استفاده از تابع امتیازدهی (مانند BDeu یا BIC) ارزیابی می‌شود. امتیازدهی نشان‌دهنده احتمال تطابق گراف با داده‌هاست.

 ۳. پذیرش یا رد گراف پیشنهادی

فاکتور بیزی (Bayes factor) با مقایسه امتیاز گراف جدید و گراف فعلی محاسبه می‌شود. اگر نسبت فاکتور بیزی و تعداد همسایگان گراف‌ها (neighbors) از یک مقدار تصادفی بیشتر باشد، گراف جدید پذیرفته می‌شود؛ در غیر این صورت، گراف فعلی حفظ می‌شود.

در نسخه پایتون، Simulated Annealing با یک برنامه خنک‌سازی (cooling schedule) اضافه شده است که کاوش در مراحل اولیه را افزایش داده و در مراحل بعدی به گراف‌های بهینه‌تر همگرا می‌شود.

 ۴. دوره Burn-in

در مراحل اولیه (burn-in)، نمونه‌ها ذخیره نمی‌شوند تا زنجیره به حالت پایدار برسد. در نسخه بهبودیافته، تعداد مراحل burn-in به ۲۰۰۰ افزایش یافته است تا تأثیر شرایط اولیه کاهش یابد و کیفیت نمونه‌برداری بهبود پیدا کند.

 ۵. جمع‌آوری نمونه‌ها

پس از دوره burn-in، گراف‌های نمونه‌برداری شده ذخیره می‌شوند تا توزیع پسین ساختارها تخمین زده شود. در نسخه پایتون، تعداد نمونه‌ها به ۵۰۰۰ افزایش یافته تا همگرایی بهتری حاصل شود.

 ۶. تشخیص همگرایی

نرخ پذیرش (acceptance ratio) به‌عنوان معیاری برای بررسی همگرایی زنجیره استفاده می‌شود. نرخ پذیرش ایده‌آل معمولاً بین ۰.۲ تا ۰.۴ است، اما در اجرای اخیر، این نرخ به ۰.۰۰۴ کاهش یافت که نشان‌دهنده کاوش محدود است.

## ویژگی‌ها و مزایا

 ۱. رویکرد بیزی جامع

برخلاف روش‌های نقطه‌ای (مانند K2)، MCMC توزیع پسین گراف‌ها را تخمین می‌زند که امکان تحلیل عدم‌قطعیت در ساختار را فراهم می‌کند. این ویژگی به‌ویژه در مواردی که عدم‌قطعیت زیادی در ساختار وجود دارد، بسیار ارزشمند است.

 ۲. انعطاف‌پذیری بالا

قابلیت استفاده از توابع امتیازدهی مختلف (مانند BDeu یا BIC) و ادغام با سایر روش‌های یادگیری. این انعطاف‌پذیری امکان تطبیق روش با انواع مختلف مسائل و داده‌ها را فراهم می‌کند.

 ۳. کاوش گسترده

توانایی کاوش در فضای بزرگ گراف‌های ممکن، به‌ویژه با Simulated Annealing. این ویژگی امکان یافتن ساختارهای پیچیده و غیرخطی را افزایش می‌دهد.

## محدودیت‌های عمده

 ۱. زمان‌بر بودن

برای شبکه‌های با بیش از ۱۰ گره، همگرایی ممکن است کند باشد. این محدودیت یکی از چالش‌های اصلی در کاربردهای بزرگ‌مقیاس محسوب می‌شود.

 ۲. نرخ پذیرش پایین

در اجرای اخیر (۰.۰۰۴)، کاوش محدود شده که می‌تواند به شناسایی ناقص لبه‌ها منجر شود. نرخ پذیرش پایین نشان‌دهنده این است که الگوریتم در فضای محدودی از ساختارها جستجو می‌کند.

 ۳. محدودیت نوع داده

این روش فقط برای داده‌های کاملاً مشاهده شده و گسسته مناسب است. برای داده‌های پیوسته یا ناقص، نیاز به پیش‌پردازش یا تطبیق روش وجود دارد.

## بهبودهای اعمال شده

 ۱. افزایش تعداد نمونه‌ها

تعداد نمونه‌ها از ۱۰۰ به ۵۰۰۰ و burn-in از ۱۰ به ۲۰۰۰ افزایش یافت تا همگرایی بهبود یابد. این افزایش قابل‌توجه باعث کاهش نوسانات تصادفی و بهبود پایداری نتایج شده است.

 ۲. استفاده از دانش پیشین

گراف اولیه با لبه‌های شناخته شده شبکه Asia مقداردهی شد. این کار باعث هدایت بهتر فرایند جستجو و کاهش زمان همگرایی شده است.

 ۳. Simulated Annealing

اضافه‌شدن برنامه خنک‌سازی برای بهبود کاوش و همگرایی. این تکنیک امکان فرار از نقاط بهینه محلی و یافتن ساختارهای بهتر را فراهم می‌کند.

 ۴. محدودیت حداکثر والدین

اعمال محدودیت `max_parents=4` برای جلوگیری از گراف‌های بیش از حد پیچیده. این محدودیت از over-fitting جلوگیری کرده و تفسیرپذیری مدل را بهبود می‌بخشد.

 ۵. بهینه‌سازی محاسباتی

استفاده از کش کردن برای کاهش محاسبات تکراری. این بهینه‌سازی باعث کاهش قابل‌توجه زمان اجرا شده است.

## نتایج اجرای اخیر

 معیارهای عملکرد

**Precision:** ۰.۶۶۷ (بهبود از ۰.۳۷۵ در نسخه اولیه)
**Recall:** ۰.۵۰۰ (بهبود از ۰.۳۷۵)
**F1-Score:** ۰.۵۷۱
**SHD (Structural Hamming Distance):** ۶ (کاهش از ۱۰)

 مشکلات شناسایی شده

لبه‌های نادرست مانند Smoking → LungCancer و Smoking → Bronchitis اضافه شده و لبه‌هایی مانند Tuberculosis → Asia و Xray → Either از دست رفته‌اند. این مشکلات نشان‌دهنده نیاز به تنظیم بهتر پارامترها و احتمالاً استفاده از روش‌های ترکیبی است.

## نتیجه‌گیری

الگوریتم Metropolis-Hastings با وجود محدودیت‌هایی در سرعت و نرخ پذیرش، همچنان یکی از روش‌های قدرتمند برای یادگیری ساختار شبکه‌های بیزی محسوب می‌شود. بهبودهای اعمال شده عملکرد آن را به‌طور قابل‌توجهی افزایش داده‌اند، اما همچنان نیاز به تنظیم دقیق‌تر پارامترها و احتمالاً ترکیب با روش‌های دیگر وجود دارد.

[قبلی](section4-1.qmd) | [بعدی](section4-3.qmd)
